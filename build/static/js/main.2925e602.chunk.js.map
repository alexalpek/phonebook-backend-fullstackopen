{"version":3,"sources":["services/phonebookService.js","components/PersonForm.js","components/Persons.js","components/Filter.js","components/Title.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","PersonForm","setNewName","setNewPhoneNumber","persons","newName","newPhoneNumber","setPersons","setNotificationMessage","setIsError","displayNotification","message","error","setTimeout","handleChange","event","handler","target","value","onSubmit","preventDefault","name","filter","person","length","window","confirm","currentDataOfPerson","find","newPerson","number","phonebookService","map","p","catch","e","nameToAdd","concat","console","log","onChange","type","Persons","filtered","filterWord","personsToShow","toLowerCase","includes","key","onClick","deleteHandler","Filter","setFiltered","setFilterWord","handleFilterSubmit","Title","text","Notification","isError","className","App","useState","notificationMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2925e602.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then((response) => response.data);\n};\n\nexport default { getAll, create, deletePerson, update };\n","import React from \"react\";\nimport phonebookService from \"../services/phonebookService\";\n\nconst PersonForm = ({\n    setNewName,\n    setNewPhoneNumber,\n    persons,\n    newName,\n    newPhoneNumber,\n    setPersons,\n    setNotificationMessage,\n    setIsError,\n}) => {\n    const nameAlreadyInPhonebook = (name) => {\n        const result = persons.filter((person) => person.name === name);\n        return result.length !== 0;\n    };\n\n    const displayNotification = (message, error = false) => {\n        setNotificationMessage(message);\n        setTimeout(() => {\n            setNotificationMessage(null);\n            if (error) {\n                setIsError(false);\n            }\n        }, 5000);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (nameAlreadyInPhonebook(newName)) {\n            if (\n                window.confirm(\n                    `${newName} is already in the phonebook, replace the old number with a new one?`\n                )\n            ) {\n                const currentDataOfPerson = persons.find(\n                    (person) => person.name === newName\n                );\n                const newPerson = {\n                    ...currentDataOfPerson,\n                    number: newPhoneNumber,\n                };\n                phonebookService\n                    .update(currentDataOfPerson.id, newPerson)\n                    .then(\n                        setPersons(\n                            persons.map((p) =>\n                                p.id === currentDataOfPerson.id ? newPerson : p\n                            )\n                        )\n                    )\n                    .then(\n                        displayNotification(\n                            `${newPerson.name}'s phone number is changed.`\n                        )\n                    )\n                    .catch((e) => {\n                        setIsError(true);\n                        displayNotification(\n                            `Information of ${newPerson.name} has been already removed from the server`,\n                            true\n                        );\n                        setPersons(\n                            persons.filter(\n                                (person) => person.id !== newPerson.id\n                            )\n                        );\n                    });\n            }\n        } else {\n            const nameToAdd = {\n                name: newName,\n                number: newPhoneNumber,\n            };\n            phonebookService\n                .create(nameToAdd)\n                .then((person) => setPersons(persons.concat(person)))\n                .then(displayNotification(`${nameToAdd.name} is created.`))\n                .catch((error) => console.log(error));\n        }\n    };\n\n    const handleChange = (event, handler) => {\n        handler(event.target.value);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                name:\n                <input onChange={(event) => handleChange(event, setNewName)} />\n                <div>\n                    number:\n                    <input\n                        onChange={(event) =>\n                            handleChange(event, setNewPhoneNumber)\n                        }\n                    />\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonForm;\n","import React from \"react\";\nimport phonebookService from \"../services/phonebookService\";\n\nconst Persons = ({\n    filtered,\n    persons,\n    filterWord,\n    setPersons,\n    setNotificationMessage,\n    setIsError,\n}) => {\n    const personsToShow = filtered\n        ? persons.filter((person) =>\n              person.name.toLowerCase().includes(filterWord.toLowerCase())\n          )\n        : persons;\n\n    const displayNotification = (message, error = false) => {\n        setNotificationMessage(message);\n        setTimeout(() => {\n            setNotificationMessage(null);\n            if (error) {\n                setIsError(false);\n            }\n        }, 5000);\n    };\n\n    const deleteHandler = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            phonebookService\n                .deletePerson(person.id)\n                .then(setPersons(persons.filter((p) => p.id !== person.id)))\n                .then(displayNotification(`${person.name} is deleted.`))\n                .catch((e) => {\n                    setIsError(true);\n                    displayNotification(\n                        `Information of ${person.name} has been already removed from the server`,\n                        true\n                    );\n                });\n        }\n    };\n\n    return (\n        <div>\n            {personsToShow.map((person) => (\n                <div key={person.name}>\n                    {person.name} {person.number}{\" \"}\n                    <button onClick={() => deleteHandler(person)}>\n                        delete\n                    </button>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = ({ setFiltered, setFilterWord }) => {\n    const handleFilterSubmit = (event) => {\n        setFilterWord(event.target.value);\n        setFiltered(true);\n    };\n\n    return (\n        <div>\n            filter shown with\n            <input\n                onChange={(event) => handleFilterSubmit(event, setFilterWord)}\n            />\n        </div>\n    );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Title = ({ text }) => <h2>{text}</h2>;\n\nexport default Title;\n","import React from \"react\";\n\nconst Notification = ({ message, isError }) => {\n    if (message === null) {\n        return null;\n    }\n\n    return <div className={isError ? \"error\" : \"notification\"}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Filter from \"./components/Filter\";\nimport Title from \"./components/Title\";\nimport phonebookService from \"./services/phonebookService\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newPhoneNumber, setNewPhoneNumber] = useState(\"\");\n    const [filterWord, setFilterWord] = useState(\"\");\n    const [filtered, setFiltered] = useState(false);\n    const [notificationMessage, setNotificationMessage] = useState(null);\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        phonebookService\n            .getAll()\n            .then((data) => setPersons(data))\n            .catch((error) => console.log(error));\n    }, []);\n\n    return (\n        <div>\n            <Title text=\"Phonebook\" />\n            <Notification message={notificationMessage} isError={isError} />\n            <Filter setFiltered={setFiltered} setFilterWord={setFilterWord} />\n            <Title text=\"add a new\" />\n            <PersonForm\n                setNewName={setNewName}\n                setNewPhoneNumber={setNewPhoneNumber}\n                persons={persons}\n                newName={newName}\n                newPhoneNumber={newPhoneNumber}\n                setPersons={setPersons}\n                setNotificationMessage={setNotificationMessage}\n                setIsError={setIsError}\n            />\n            <Title text=\"Numbers\" />\n            <Persons\n                filtered={filtered}\n                filterWord={filterWord}\n                persons={persons}\n                setPersons={setPersons}\n                setNotificationMessage={setNotificationMessage}\n                setIsError={setIsError}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}